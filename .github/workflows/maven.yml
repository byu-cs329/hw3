name: check-mvn
on:
  push:
    branches: [ master ]
  pull_request:
permissions:
  contents: write
  issues: write
  pull-requests: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build and Test with Maven
        run: mvn --no-transfer-progress test
      - name: Run JUnit Console Standalone
        run: mvn --no-transfer-progress exec:java
      - name: Create coverage markdown file
        run: |
          mvn -ntp jacoco:report
          rm -rf coverage.md
          echo "## Jacoco Summary" >> coverage.md
          echo "Type | Missed | Covered" >> coverage.md
          echo "---- | ------- | ------" >> coverage.md
          awk -F, '{ instructions += $4; covered += $5 } { branches += $6; branches_covered += $7 } { lines += $8; lines_covered += $9 } { complexity += $10; complexity_covered += $11 } { methods += $12; methods_covered += $13 } END { print "Instructions | ", instructions, " | ", covered; print "Braches |", branches, " | ", branches_covered; print "Lines | ", lines, " | ", lines_covered; print " Complexity | ", complexity, " | ", complexity_covered; print "Methods | ", methods, " | ", methods_covered; }' target/site/jacoco/jacoco.csv >> coverage.md
          echo "## Detailed Report " >> coverage.md
          cat target/site/jacoco/jacoco.csv | sed 's/,/ | /g' | awk '1; NR==1{gsub(/[^|]/,"-"); print}' >> coverage.md
      - name: 'Publish coverage report to PR'
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          script: |
            // Remove outdated comments created by the bot.
            const { data } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            data.forEach(({ id }) => {
              github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: id,
              });
            });

            // Output coverage.md into the output variable
            let output = '';
            const options = {};
            options.listeners = {
              stdout: (data) => {
                output += data.toString();
              }
            };
            await exec.exec('cat', ['coverage.md'], options);

            // Create a new PR Comment based on coverage.md
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Check for Checkstyle Warnings
        run: mvn --no-transfer-progress -Dcheckstyle.violationSeverity=warning compile
